{"componentChunkName":"component---src-templates-doc-tsx","path":"/components/code/","result":{"data":{"mdx":{"fields":{"title":"Code","description":"The Code component visually distinguishes inline text as a fragment of computer code.","slug":"/components/code/","figma":"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=212%3A535","github":"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/code"},"frontmatter":{"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"code\",\n  \"title\": \"Code\",\n  \"section\": \"Components\",\n  \"description\": \"The Code component visually distinguishes inline text as a fragment of computer code.\",\n  \"figma\": \"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=212%3A535\",\n  \"github\": \"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/code\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { Code } from \"@twilio-labs/match/components\";\n\nconst Component = () => <Code>ahoy()</Code>;\n`)), mdx(\"h3\", null, `Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `variant?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `CodeVariant`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'dark'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'dark', 'light'`)))), mdx(\"hr\", null), mdx(\"h2\", null, `Guidelines`), mdx(\"h3\", null, `About Code`), mdx(\"p\", null, `The Code component emphasizes short, inline pieces of computer code such as variable names, commands and function calls. For multiline code samples and bash shell prompts, see the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./snippet.mdx\"\n  }, `Snippet component`), `.`), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Dark`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Paragraph>\n  The best way to learn about the Twilio CLI is to simply run the{\" \"}\n  <Code>twilio</Code> command.\n</Paragraph>\n`)), mdx(\"h3\", null, `Light`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Paragraph>\n  See something that looks interesting? Try running{\" \"}\n  <Code variant=\"light\">twilio api</Code>.\n</Paragraph>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"acfae3ac-0a9e-5bd4-8b32-6808a8d76c4b"}},"staticQueryHashes":["1936978686"]}