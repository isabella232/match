{"componentChunkName":"component---src-templates-doc-tsx","path":"/components/flag/","result":{"data":{"mdx":{"fields":{"title":"Flag","description":"A flag is a visual symbol that represents a country, state, union, or concept. Flags are in alphabetical order and have their ISO code at the end of their name. Svgs are adapted from this open source project: https://flagpack.xyz/","slug":"/components/flag/","figma":"https://figma.com/file/dJZlEiQ5KmoxGSRRWHFuug/Flags","github":"https://github.com/twilio-labs/match/tree/main/packages/match-flags/"},"frontmatter":{"image":null},"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"flag\",\n  \"title\": \"Flag\",\n  \"section\": \"Components\",\n  \"description\": \"A flag is a visual symbol that represents a country, state, union, or concept. Flags are in alphabetical order and have their ISO code at the end of their name. Svgs are adapted from this open source project: https://flagpack.xyz/\",\n  \"figma\": \"https://figma.com/file/dJZlEiQ5KmoxGSRRWHFuug/Flags\",\n  \"github\": \"https://github.com/twilio-labs/match/tree/main/packages/match-flags/\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { RainbowFlag } from \"@twilio-labs/match-flags\";\n\nconst Component = () => <RainbowFlag />;\n`)), mdx(\"h3\", null, `Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `size?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `FlagSize`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'normal'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'small', 'normal', 'large'`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `decorative?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `boolean`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `false`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Determines if icon is decorative or informative. Decorative icon titles are not read by screenreaders.`)))), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Decorative Icons`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `alt`), ` text is provided for accessibility compliance unless the icon is specifically designated as decorative.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<RainbowFlag decorative={true} />\n`)), mdx(\"h3\", null, `Sizes`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<>\n  <RainbowFlag size=\"small\" /> <RainbowFlag size=\"normal\" />{\" \"}\n  <RainbowFlag size=\"large\" />\n</>\n`)), mdx(\"h2\", null, `Flags`), mdx(\"p\", null, `Flags of the countries and territories of the world.`, mdx(\"br\", null), `\nSizes: Small (12px), Normal (16px), Large (24px)`), mdx(Flags, {\n    mdxType: \"Flags\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"8c26764c-cdc8-5c02-8bea-9b3408434936"}},"staticQueryHashes":["1936978686"]}