{"componentChunkName":"component---src-templates-doc-tsx","path":"/components/heading/","result":{"data":{"mdx":{"fields":{"title":"Heading","description":"Headings help introduce and organize content on a page. There is typically a main heading for the page and additional headings for the subsequent sections.","slug":"/components/heading/","figma":"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=176%3A551","github":"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/heading"},"frontmatter":{"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"heading\",\n  \"title\": \"Heading\",\n  \"section\": \"Components\",\n  \"description\": \"Headings help introduce and organize content on a page. There is typically a main heading for the page and additional headings for the subsequent sections.\",\n  \"figma\": \"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=176%3A551\",\n  \"github\": \"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/heading\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { Heading } from \"@twilio-labs/match/components\";\n\nconst Component = () => <Heading variant=\"h1\">Ahoy</Heading>;\n`)), mdx(\"h3\", null, `Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `variant`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `HeadingVariant`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `null`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'h1', 'h2', 'h3', 'h4', 'h5', 'h6'`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `inverse?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `boolean`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `null`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Inverts text color for use with dark backgrounds.`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `as?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `HeadingVariant`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `null`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `The HTML tag to use if different from `, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, `variant`), `.`)))), mdx(\"p\", null, `Also supports `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/#margin-props\"\n  }, `margin`), ` props.`), mdx(\"hr\", null), mdx(\"h2\", null, `Guidelines`), mdx(\"h3\", null, `About Headings`), mdx(\"p\", null, `Headings are used to create a sense of hierarchy in the page. H1s have the highest rank and introduces the page. The following ranks get more specific and divide the page into sections and subsections. Headings with an equal or higher rank start a new section, headings with a lower rank start new subsections that are part of the higher ranked section.`), mdx(\"h3\", null, `Accessibility`), mdx(\"p\", null, `Here are some quick accessibility tips to ensure a positive user experience for all users.`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Do not skip heading levels. It is common for screen readers to build an outline of the page using headings and skipping a heading level could cause confusion, making a user question why a heading is missing.`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Headings should be used in a logical order that aligns with the visual hierarchy`)), mdx(\"hr\", null), mdx(\"h2\", null, `Composition`), mdx(\"p\", null, `Many users scan websites by reading headings so the heading text should be clear, concise, and descriptive of the content that will follow that heading. Heading text of a lower ranked heading should relate to the heading text of a higher ranked heading. Overall, the headings should read like an outline of the page.`), mdx(Guidelines, {\n    mdxType: \"Guidelines\"\n  }, mdx(Do, {\n    mdxType: \"Do\"\n  }, mdx(\"ul\", null, mdx(\"li\", null, \"Have a single h1 that gives the user an idea of what the page is about.\"), mdx(\"li\", null, \"Headings should support the hierarchy and structure of the page.\"), mdx(\"li\", null, \"Headings should be in a logical order that can be read like an outline.\"))), mdx(DoNot, {\n    mdxType: \"DoNot\"\n  }, mdx(\"ul\", null, mdx(\"li\", null, \"Don't have multiple h1s on a page.\"), mdx(\"li\", null, \"Don\\u2019t use headings for pure stylistic purposes.\"), mdx(\"li\", null, \"Don\\u2019t use headings out of order.\")))), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Hierarchy`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<>\n  <Heading variant=\"h1\" marginBottom=\"scale100\">\n    Heading One\n  </Heading>\n  <Heading variant=\"h2\" marginBottom=\"scale100\">\n    Heading Two\n  </Heading>\n  <Heading variant=\"h3\" marginBottom=\"scale100\">\n    Heading Three\n  </Heading>\n  <Heading variant=\"h4\" marginBottom=\"scale100\">\n    Heading Four\n  </Heading>\n  <Heading variant=\"h5\" marginBottom=\"scale100\">\n    Heading Five\n  </Heading>\n  <Heading variant=\"h6\">Heading Six</Heading>\n</>\n`)), mdx(\"h3\", null, `Inverse`), mdx(\"p\", null, `Include the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `inverse`), ` prop when headings are used on dark backgrounds.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live bg=darkest\",\n    \"live\": true,\n    \"bg\": \"darkest\"\n  }, `<Heading variant=\"h1\" inverse>\n  Heading One\n</Heading>\n`)), mdx(\"h3\", null, `Heading with variant and as`), mdx(\"p\", null, `The underlying HTML of the Heading component matches the provided variant by default. This can be overridden with the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `as`), ` property when a certain visual style is required out of the hierarchical context.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Heading variant=\"h3\" as=\"h2\">\n  h2 heading with h3 visual appearance\n</Heading>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"08721cda-3fd0-5d7f-bd24-03077cff2545"}},"staticQueryHashes":["1936978686"]}