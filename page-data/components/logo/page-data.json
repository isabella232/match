{"componentChunkName":"component---src-templates-doc-tsx","path":"/components/logo/","result":{"data":{"mdx":{"fields":{"title":"Logo","description":"A logo is a visual representation of a brand. This component includes both Twilio and customer logos. Twilio product logos can be found in the [icon component](./icon.mdx).","slug":"/components/logo/","figma":"","github":"https://github.com/twilio-labs/match/blob/main/packages/match-logos"},"frontmatter":{"image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"logo\",\n  \"title\": \"Logo\",\n  \"section\": \"Components\",\n  \"description\": \"A logo is a visual representation of a brand. This component includes both Twilio and customer logos. Twilio product logos can be found in the [icon component](./icon.mdx).\",\n  \"github\": \"https://github.com/twilio-labs/match/blob/main/packages/match-logos\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"p\", null, `There are currently 3 supported logo packages. `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `@twilio-labs/match/logos/brand`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `@twilio-labs/match/logos/mono`), ` and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `@twilio-labs/match/logos/color`), `. Logos are imported individually from their respective packages.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { ChimeLogo } from \"@twilio-labs/match/logos/mono\";\n\nconst Component = () => <ChimeLogo />;\n`)), mdx(\"h3\", null, `Monochromatic Logo Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `color?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Color`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'gray90'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'gray90', 'gray70', 'white'`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `maxHeight?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `string`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'24px'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Maximum height of the SVG.`)))), mdx(\"h3\", null, `Color and Brand Logo Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `maxHeight?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `string`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'24px'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Maximum height of the SVG.`)))), mdx(\"hr\", null), mdx(\"h2\", null, `Guidelines`), mdx(\"h3\", null, `Accessibility`), mdx(\"p\", null, `All Logos include an accessible title by default. When grouping logos together, put a header on the group (i.e. \"Examples of Twilio customers\"). The header may be wrapped in the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./visually-hidden.mdx\"\n  }, `VisuallyHidden component`), `.`), mdx(\"hr\", null), mdx(\"h2\", null, `Composition`), mdx(\"h3\", null, `Twilio Logos`), mdx(\"p\", null, `Preferred logo colors are red on light backgrounds and white on dark backgrounds. Black is an option in some cases. Please follow the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.twilio.com/brand/elements/logos\"\n  }, `Twilio brand guidelines`), `.`), mdx(\"h3\", null, `Customer Logos`), mdx(\"p\", null, `Customer Logos are provided in both monochromatic and full color versions. Full color logos may not be modified. Monochromatic logos may be assigned a color token of \"gray90\", \"gray70\", or \"white\".`), mdx(Guidelines, {\n    mdxType: \"Guidelines\"\n  }, mdx(Do, {\n    mdxType: \"Do\"\n  }, \"Stick to the recommended colors or the original logo colors.\"), mdx(DoNot, {\n    mdxType: \"DoNot\"\n  }, \"Change the color of another company's logos to Twilio brand colors (Twilio red or blue).\")), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Logo Color`), mdx(\"p\", null, `Monochromatic logos may be assigned a color token.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<AirbnbLogo color=\"gray70\" />\n`)), mdx(\"h3\", null, `Logo Size`), mdx(\"p\", null, `The size may be adjusted by setting the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `maxHeight`), ` prop with any valid css unit in px, rem, or em.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Grid gridGap=\"scale7\">\n  <Cell>\n    <ChimeLogo maxHeight=\"1.5em\" />\n  </Cell>\n  <Cell>\n    <ChimeLogo maxHeight=\"2rem\" />\n  </Cell>\n  <Cell>\n    <ChimeLogo maxHeight=\"40px\" />\n  </Cell>\n</Grid>\n`)), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `maxHeight`), ` prop accepts `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://styled-system.com/responsive-styles#responsive-styles\"\n  }, `responsive values`), `.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<ChimeLogo maxHeight={[\"1rem\", \"1.5rem\"]} />\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"671aac94-2ca2-5a6f-8241-30bf9bed25f3"}},"staticQueryHashes":["1936978686"]}