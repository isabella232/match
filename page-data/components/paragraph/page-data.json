{"componentChunkName":"component---src-templates-doc-tsx","path":"/components/paragraph/","result":{"data":{"mdx":{"fields":{"title":"Paragraph","description":"Paragraphs are lines or blocks of text.","slug":"/components/paragraph/","figma":"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=340%3A764","github":"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/paragraph"},"frontmatter":{"image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/51e3428fc72f637c5aec070dc197de0e/c5b79/paragraph.png","srcSet":"/static/51e3428fc72f637c5aec070dc197de0e/41a78/paragraph.png 95w,\n/static/51e3428fc72f637c5aec070dc197de0e/88a50/paragraph.png 190w,\n/static/51e3428fc72f637c5aec070dc197de0e/c5b79/paragraph.png 380w,\n/static/51e3428fc72f637c5aec070dc197de0e/1ad25/paragraph.png 760w","sizes":"(min-width: 380px) 380px, 100vw"},"sources":[{"srcSet":"/static/51e3428fc72f637c5aec070dc197de0e/22533/paragraph.webp 95w,\n/static/51e3428fc72f637c5aec070dc197de0e/f6c68/paragraph.webp 190w,\n/static/51e3428fc72f637c5aec070dc197de0e/eabfd/paragraph.webp 380w,\n/static/51e3428fc72f637c5aec070dc197de0e/22db1/paragraph.webp 760w","type":"image/webp","sizes":"(min-width: 380px) 380px, 100vw"}]},"width":380,"height":289}}}},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"paragraph\",\n  \"title\": \"Paragraph\",\n  \"section\": \"Components\",\n  \"description\": \"Paragraphs are lines or blocks of text.\",\n  \"image\": \"../../images/docs/components/paragraph.png\",\n  \"figma\": \"https://www.figma.com/file/oYazzpZ4XWFUlwD1pDHNms/Core-Components?node-id=340%3A764\",\n  \"github\": \"https://github.com/twilio-labs/match/tree/main/packages/match-components/src/paragraph\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { Paragraph } from \"@twilio-labs/match/components\";\n\nconst Component = () => <Paragraph>Ahoy, world!</Paragraph>;\n`)), mdx(\"h3\", null, `Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `variant?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `ParagraphVariant`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'medium'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'small', 'medium', 'large', 'xLarge', 'xSmall'`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `color?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `TextColor`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `null`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'primary', 'secondary', 'tertiary', 'inversePrimary', 'inherit'`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `textAlign?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `string`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'left'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'center', 'left'`)))), mdx(\"p\", null, `Also supports `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/components/#margin-props\"\n  }, `margin`), ` props.`), mdx(\"hr\", null), mdx(\"h2\", null, `Guidelines`), mdx(\"h3\", null, `About Paragraphs`), mdx(\"p\", null, `Paragraphs are blocks of thematically related text typically distinguished from adjacent content with margins.`), mdx(\"h3\", null, `Accessibility`), mdx(\"p\", null, `Paragraph text should be visually distinct and legible. Text color should always meet AA accessibility standard (4.5:1). Use vertical margins to distinguish sequential Paragraphs.`), mdx(\"hr\", null), mdx(\"h2\", null, `Composition`), mdx(\"p\", null, `Most of the text blocks on a page will use Paragraphs. Paragraphs provide legible defaults for font size, line height and color.`), mdx(Guidelines, {\n    mdxType: \"Guidelines\"\n  }, mdx(Do, {\n    mdxType: \"Do\"\n  }, \"Keep paragraph line lengths around 50-75 characters.\"), mdx(DoNot, {\n    mdxType: \"DoNot\"\n  }, \"Let paragraphs take up the full width of the page or wrap too much.\"), mdx(Do, {\n    mdxType: \"Do\"\n  }, \"Use sentence case but add visual hierarchy with color, font weight, and size.\"), mdx(DoNot, {\n    mdxType: \"DoNot\"\n  }, \"Avoid using all caps. Text in all caps is harder to read for all users, but especially for some with disabilities.\"), mdx(Do, {\n    mdxType: \"Do\"\n  }, \"Focus on what your user really needs to know. Use bullets when listing items instead of listing in a paragraph.\"), mdx(DoNot, {\n    mdxType: \"DoNot\"\n  }, \"Avoid multiple paragraphs of text. UI content should be clear and concise.\")), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Variants`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<>\n  <Paragraph variant=\"xSmall\" marginBottom=\"scale180\">\n    ’Twas brillig, and the slithy toves Did gyre and gimble in the wabe: All\n    mimsy were the borogoves, And the mome raths outgrabe.\n  </Paragraph>\n  <Paragraph variant=\"small\" marginBottom=\"scale180\">\n    “Beware the Jabberwock, my son! The jaws that bite, the claws that catch!\n    Beware the Jubjub bird, and shun The frumious Bandersnatch!”\n  </Paragraph>\n  <Paragraph variant=\"medium\" marginBottom=\"scale180\">\n    He took his vorpal sword in hand; Long time the manxome foe he sought — So\n    rested he by the Tumtum tree And stood awhile in thought.\n  </Paragraph>\n  <Paragraph variant=\"large\" marginBottom=\"scale180\">\n    And, as in uffish thought he stood, The Jabberwock, with eyes of flame, Came\n    whiffling through the tulgey wood, And burbled as it came!\n  </Paragraph>\n  <Paragraph variant=\"xLarge\">\n    One, two! One, two! And through and through The vorpal blade went\n    snicker-snack! He left it dead, and with its head He went galumphing back.\n  </Paragraph>\n</>\n`)), mdx(\"h3\", null, `Inverse`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live bg=darkest\",\n    \"live\": true,\n    \"bg\": \"darkest\"\n  }, `<Paragraph color=\"inversePrimary\">\n  “And hast thou slain the Jabberwock? Come to my arms, my beamish boy! O\n  frabjous day! Callooh! Callay!” He chortled in his joy.\n</Paragraph>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"80401189-652c-5e81-aa6a-7ebf962c2142"}},"staticQueryHashes":["1936978686"]}