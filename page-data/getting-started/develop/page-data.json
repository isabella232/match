{"componentChunkName":"component---src-templates-doc-tsx","path":"/getting-started/develop/","result":{"data":{"mdx":{"fields":{"title":"Develop","description":"Installation and usage instructions for developing with Match.","slug":"/getting-started/develop/","figma":"","github":""},"frontmatter":{"image":null},"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"develop\",\n  \"title\": \"Develop\",\n  \"section\": \"Getting Started\",\n  \"description\": \"Installation and usage instructions for developing with Match.\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `1. Install external dependencies`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Package`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Version`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://formik.org\"\n  }, `formik`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `2.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/facebook/prop-types\"\n  }, `prop-types`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `15.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://reactjs.org/\"\n  }, `react`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `17.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://reactjs.org/docs/react-dom.html\"\n  }, `react-dom`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `17.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.npmjs.com/package/react-is\"\n  }, `react-is`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `17.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.npmjs.com/package/react-is\"\n  }, `react-uid`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `2.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://www.styled-components.com/\"\n  }, `styled-components`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `5.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://styled-system.com/\"\n  }, `styled-system`)), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `5.x`)))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, `npm install --save formik prop-types react react-dom react-is react-uid styled-components styled-system\n`)), mdx(\"h2\", null, `2. Install Match packages`), mdx(\"p\", null, `Install the following packages so you can consume Matchâ€™s tokens and themes to build custom page sections.`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Package`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Version`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `@twilio-labs/match`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `2.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `@twilio-labs/match-icons`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `1.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `@twilio-labs/match-logos`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `1.x`)), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `@twilio-labs/match-flags`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `1.x`)))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, `npm install --save @twilio-labs/match @twilio-labs/match-icons @twilio-labs/match-logos @twilio-labs/match-flags\n`)), mdx(\"h2\", null, `3. Wrap your app with a theme component`), mdx(\"p\", null, `For example, if you want to use the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `TwilioTheme`), `:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import * as React from \"react\";\nimport { TwilioTheme } from \"@twilio-labs/match/themes\";\n\nconst App: React.FC = ({ children }) => <TwilioTheme>{children}</TwilioTheme>;\nexport { App };\n`)), mdx(\"p\", null, `See `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/twilio-labs/match/blob/main/packages/match-themes/src/constants.ts\"\n  }, `available themes here`), `.`), mdx(\"h2\", null, `Code Quality`), mdx(\"p\", null, `Match distributes reusable configuration for `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eslint.org/\"\n  }, `ESLint`), `, `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stylelint.io/\"\n  }, `Stylelint`), `, `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/browserslist/browserslist\"\n  }, `Browserslist`), ` and `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.typescriptlang.org/\"\n  }, `TypeScript`), `. It is highly recommended to extend from these configs for a consistent development experience. Additionally we recommend using `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/streetsidesoftware/cspell/tree/main/packages/cspell\"\n  }, `cspell`), ` and `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://prettier.io/\"\n  }, `Prettier`), ` for code spell checking and automatic formatting.`), mdx(\"h3\", null, `ESLint`), mdx(\"p\", null, `Install the Match ESLint configuration and all peer dependencies.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, `npm install --save-dev @twilio-labs/eslint-config-match @typescript-eslint/eslint-plugin @typescript-eslint/parser babel-eslint eslint eslint-config-prettier eslint-plugin-eslint-comments eslint-plugin-import eslint-plugin-jest eslint-plugin-jest-formatting eslint-plugin-jsx-a11y eslint-plugin-promise eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-testing-library eslint-plugin-unicorn\n`)), mdx(\"p\", null, `Create a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.eslintrc.json`), ` file in the root of your project and add the following.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, `{\n  \"extends\": [\"@twilio-labs/eslint-config-match\"]\n}\n`)), mdx(\"h3\", null, `Stylelint`), mdx(\"p\", null, `Install the Match Stylelint configuration and all peer dependencies.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, `npm install --save-dev @twilio-labs/stylelint-config-match stylelint stylelint-a11y stylelint-config-prettier stylelint-config-rational-order stylelint-config-recommended stylelint-declaration-block-no-ignored-properties stylelint-no-unsupported-browser-features stylelint-order\n`)), mdx(\"p\", null, `Create a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `.stylelintrc.json`), ` file in the root of your project and add the following.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, `{\n  \"extends\": [\"@twilio-labs/stylelint-config-match\"]\n}\n`)), mdx(\"h3\", null, `TypeScript`), mdx(\"p\", null, `Install the Match TypeScript configuration.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, `npm install --save-dev @twilio-labs/tsconfig-match\n`)), mdx(\"p\", null, `Create a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `tsconfig.json`), ` file in the root of your project and add the following.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, `{\n  \"extends\": \"@twilio-labs/tsconfig-match\"\n}\n`)), mdx(\"h3\", null, `Browserslist`), mdx(\"p\", null, `Install the Match browserslist configuration.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, `npm install --save-dev @twilio-labs/browserslist-config-match\n`)), mdx(\"p\", null, `Add the following to your project's `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `package.json`), ` file.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, `{\n  \"browserslist\": [\"extends @twilio-labs/browserslist-config-match\"]\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9ea4f525-6d81-57be-8976-ac3474ca39cb"}},"staticQueryHashes":["1936978686"]}