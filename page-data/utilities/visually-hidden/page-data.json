{"componentChunkName":"component---src-templates-doc-tsx","path":"/utilities/visually-hidden/","result":{"data":{"mdx":{"fields":{"title":"VisuallyHidden","description":"Utility for visually hiding content to provide an accessible experience for users of assistive technology.","slug":"/utilities/visually-hidden/","figma":"","github":"https://github.com/twilio-labs/match/blob/main/packages/match-components/src/visually-hidden.tsx"},"frontmatter":{"image":null},"body":"const _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst _frontmatter = {\n  \"id\": \"visually-hidden\",\n  \"title\": \"VisuallyHidden\",\n  \"section\": \"Utilities\",\n  \"description\": \"Utility for visually hiding content to provide an accessible experience for users of assistive technology.\",\n  \"github\": \"https://github.com/twilio-labs/match/blob/main/packages/match-components/src/visually-hidden.tsx\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, `Code`), mdx(\"h3\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `import { VisuallyHidden } from \"@twilio-labs/match/components\";\n\nconst Component = () => (\n  <VisuallyHidden as=\"p\">Visually hidden text</VisuallyHidden>\n);\n`)), mdx(\"h3\", null, `Props`), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Prop`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Type`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Default`), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `Description`))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `as?`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `asTags`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'span'`), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, `'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'div', 'p', 'span', 'th', 'thead', 'tr'`)))), mdx(\"hr\", null), mdx(\"h2\", null, `Examples`), mdx(\"h3\", null, `Instructional Cues`), mdx(\"p\", null, `When location or presentation provide context to sighted users, visually hidden content can offer cues for assistive technology. Breadcrumbs are an example of a commonly understood user interface that may be unclear when encountered by a screen reader. The text “You are here:” provides context for assistive technology, but is visually hidden to prevent redundancy.`), mdx(\"p\", null, `Because screen readers do not convey any visual information, regions of a page layout must be explicitly defined. In this example, the h2 element refines our page outline which can assist sightless users with navigation.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<nav>\n  <VisuallyHidden as=\"h2\">You are here:</VisuallyHidden>\n  <a href=\"/solutions\">Solutions</a> / <a href=\"/solutions/sms\">SMS</a>\n</nav>\n`)), mdx(\"h2\", null, `Composition`), mdx(\"p\", null, `Use the Visually Hidden component to provide additional or contextual information to users of assistive technology which may be inferred by sighted users and which you cannot provide with semantic HTML.`), mdx(\"h3\", null, `Don't Do This`), mdx(\"p\", null, `Don’t hide interactive elements.`), mdx(\"h3\", null, `Do This`), mdx(\"p\", null, `Provide additional context to screen readers.`), mdx(\"h3\", null, `Accessibility`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `Because “sightless” users may have some limited vision, Visually Hidden content should be complimentary`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `In page browser searches will find visually hidden content which may confuse sighted users`)));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"51d970aa-48e0-55e2-90f2-f27e6685c296"}},"staticQueryHashes":["1936978686"]}